#!/bin/bash

# Search all git repositories under specified directory, and execute git command for each one.
# Usage: git-each-repo <base-directory> <command>
# Example:
# 	pull all repos: git-each-repo /directory/contains/many/repos pull


if [ "$#" -lt 2 ]; then
	echo "Usage: $0 <base-directory> <command>" >&2;
	exit 1;
elif [ ! -d "$1" ]; then
	echo "\"$1\" is not a directory.";
	exit 1;
fi



base_dir="$1";
shift;
command=$@;

function isGitRootDir {
	local checkDir="$1";
	pushd "$checkDir" > /dev/null && {
		local gitDir=$(git rev-parse --git-dir 2> /dev/null);
		[ $? -eq 0 -a \( "$gitDir" == '.' -o "$gitDir" == '.git' \) ];
		local result=$?;
		popd > /dev/null;
		return $result;
	};

}

function walkSubDirs {
	local dir="$1";
	if isGitRootDir "$dir"; then
		pushd "$dir" > /dev/null && {
			echo -e "\033[1mProcessing \"$dir\" ...\033[0m";
			git $command;
			echo;
			popd > /dev/null;
		}
	else
		local subdir;
		find "$dir" -mindepth 1 -maxdepth 1 -type d -print0 2>/dev/null | while read -d $'\0' subdir; do
			walkSubDirs "$subdir";
		done;
	fi;
}


walkSubDirs "$base_dir";
